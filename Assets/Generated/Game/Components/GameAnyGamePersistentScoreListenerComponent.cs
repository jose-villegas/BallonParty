//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public AnyGamePersistentScoreListenerComponent anyGamePersistentScoreListener { get { return (AnyGamePersistentScoreListenerComponent)GetComponent(GameComponentsLookup.AnyGamePersistentScoreListener); } }
    public bool hasAnyGamePersistentScoreListener { get { return HasComponent(GameComponentsLookup.AnyGamePersistentScoreListener); } }

    public void AddAnyGamePersistentScoreListener(System.Collections.Generic.List<IAnyGamePersistentScoreListener> newValue) {
        var index = GameComponentsLookup.AnyGamePersistentScoreListener;
        var component = (AnyGamePersistentScoreListenerComponent)CreateComponent(index, typeof(AnyGamePersistentScoreListenerComponent));
        component.value = newValue;
        AddComponent(index, component);
    }

    public void ReplaceAnyGamePersistentScoreListener(System.Collections.Generic.List<IAnyGamePersistentScoreListener> newValue) {
        var index = GameComponentsLookup.AnyGamePersistentScoreListener;
        var component = (AnyGamePersistentScoreListenerComponent)CreateComponent(index, typeof(AnyGamePersistentScoreListenerComponent));
        component.value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemoveAnyGamePersistentScoreListener() {
        RemoveComponent(GameComponentsLookup.AnyGamePersistentScoreListener);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherAnyGamePersistentScoreListener;

    public static Entitas.IMatcher<GameEntity> AnyGamePersistentScoreListener {
        get {
            if (_matcherAnyGamePersistentScoreListener == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.AnyGamePersistentScoreListener);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherAnyGamePersistentScoreListener = matcher;
            }

            return _matcherAnyGamePersistentScoreListener;
        }
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.EventEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public void AddAnyGamePersistentScoreListener(IAnyGamePersistentScoreListener value) {
        var listeners = hasAnyGamePersistentScoreListener
            ? anyGamePersistentScoreListener.value
            : new System.Collections.Generic.List<IAnyGamePersistentScoreListener>();
        listeners.Add(value);
        ReplaceAnyGamePersistentScoreListener(listeners);
    }

    public void RemoveAnyGamePersistentScoreListener(IAnyGamePersistentScoreListener value, bool removeComponentWhenEmpty = true) {
        var listeners = anyGamePersistentScoreListener.value;
        listeners.Remove(value);
        if (removeComponentWhenEmpty && listeners.Count == 0) {
            RemoveAnyGamePersistentScoreListener();
        } else {
            ReplaceAnyGamePersistentScoreListener(listeners);
        }
    }
}
