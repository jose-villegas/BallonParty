//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public AnyGameLevelListenerComponent anyGameLevelListener { get { return (AnyGameLevelListenerComponent)GetComponent(GameComponentsLookup.AnyGameLevelListener); } }
    public bool hasAnyGameLevelListener { get { return HasComponent(GameComponentsLookup.AnyGameLevelListener); } }

    public void AddAnyGameLevelListener(System.Collections.Generic.List<IAnyGameLevelListener> newValue) {
        var index = GameComponentsLookup.AnyGameLevelListener;
        var component = (AnyGameLevelListenerComponent)CreateComponent(index, typeof(AnyGameLevelListenerComponent));
        component.value = newValue;
        AddComponent(index, component);
    }

    public void ReplaceAnyGameLevelListener(System.Collections.Generic.List<IAnyGameLevelListener> newValue) {
        var index = GameComponentsLookup.AnyGameLevelListener;
        var component = (AnyGameLevelListenerComponent)CreateComponent(index, typeof(AnyGameLevelListenerComponent));
        component.value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemoveAnyGameLevelListener() {
        RemoveComponent(GameComponentsLookup.AnyGameLevelListener);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherAnyGameLevelListener;

    public static Entitas.IMatcher<GameEntity> AnyGameLevelListener {
        get {
            if (_matcherAnyGameLevelListener == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.AnyGameLevelListener);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherAnyGameLevelListener = matcher;
            }

            return _matcherAnyGameLevelListener;
        }
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.EventEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public void AddAnyGameLevelListener(IAnyGameLevelListener value) {
        var listeners = hasAnyGameLevelListener
            ? anyGameLevelListener.value
            : new System.Collections.Generic.List<IAnyGameLevelListener>();
        listeners.Add(value);
        ReplaceAnyGameLevelListener(listeners);
    }

    public void RemoveAnyGameLevelListener(IAnyGameLevelListener value, bool removeComponentWhenEmpty = true) {
        var listeners = anyGameLevelListener.value;
        listeners.Remove(value);
        if (removeComponentWhenEmpty && listeners.Count == 0) {
            RemoveAnyGameLevelListener();
        } else {
            ReplaceAnyGameLevelListener(listeners);
        }
    }
}
