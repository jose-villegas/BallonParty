//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public GamePersistentScoreComponent gamePersistentScore { get { return (GamePersistentScoreComponent)GetComponent(GameComponentsLookup.GamePersistentScore); } }
    public bool hasGamePersistentScore { get { return HasComponent(GameComponentsLookup.GamePersistentScore); } }

    public void AddGamePersistentScore(string newName, int newScore) {
        var index = GameComponentsLookup.GamePersistentScore;
        var component = (GamePersistentScoreComponent)CreateComponent(index, typeof(GamePersistentScoreComponent));
        component.Name = newName;
        component.Score = newScore;
        AddComponent(index, component);
    }

    public void ReplaceGamePersistentScore(string newName, int newScore) {
        var index = GameComponentsLookup.GamePersistentScore;
        var component = (GamePersistentScoreComponent)CreateComponent(index, typeof(GamePersistentScoreComponent));
        component.Name = newName;
        component.Score = newScore;
        ReplaceComponent(index, component);
    }

    public void RemoveGamePersistentScore() {
        RemoveComponent(GameComponentsLookup.GamePersistentScore);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherGamePersistentScore;

    public static Entitas.IMatcher<GameEntity> GamePersistentScore {
        get {
            if (_matcherGamePersistentScore == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.GamePersistentScore);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherGamePersistentScore = matcher;
            }

            return _matcherGamePersistentScore;
        }
    }
}
