//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentContextApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameContext {

    public GameEntity gameTurnCounterEntity { get { return GetGroup(GameMatcher.GameTurnCounter).GetSingleEntity(); } }
    public GameTurnCounterComponent gameTurnCounter { get { return gameTurnCounterEntity.gameTurnCounter; } }
    public bool hasGameTurnCounter { get { return gameTurnCounterEntity != null; } }

    public GameEntity SetGameTurnCounter(int newValue) {
        if (hasGameTurnCounter) {
            throw new Entitas.EntitasException("Could not set GameTurnCounter!\n" + this + " already has an entity with GameTurnCounterComponent!",
                "You should check if the context already has a gameTurnCounterEntity before setting it or use context.ReplaceGameTurnCounter().");
        }
        var entity = CreateEntity();
        entity.AddGameTurnCounter(newValue);
        return entity;
    }

    public void ReplaceGameTurnCounter(int newValue) {
        var entity = gameTurnCounterEntity;
        if (entity == null) {
            entity = SetGameTurnCounter(newValue);
        } else {
            entity.ReplaceGameTurnCounter(newValue);
        }
    }

    public void RemoveGameTurnCounter() {
        gameTurnCounterEntity.Destroy();
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public GameTurnCounterComponent gameTurnCounter { get { return (GameTurnCounterComponent)GetComponent(GameComponentsLookup.GameTurnCounter); } }
    public bool hasGameTurnCounter { get { return HasComponent(GameComponentsLookup.GameTurnCounter); } }

    public void AddGameTurnCounter(int newValue) {
        var index = GameComponentsLookup.GameTurnCounter;
        var component = (GameTurnCounterComponent)CreateComponent(index, typeof(GameTurnCounterComponent));
        component.Value = newValue;
        AddComponent(index, component);
    }

    public void ReplaceGameTurnCounter(int newValue) {
        var index = GameComponentsLookup.GameTurnCounter;
        var component = (GameTurnCounterComponent)CreateComponent(index, typeof(GameTurnCounterComponent));
        component.Value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemoveGameTurnCounter() {
        RemoveComponent(GameComponentsLookup.GameTurnCounter);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherGameTurnCounter;

    public static Entitas.IMatcher<GameEntity> GameTurnCounter {
        get {
            if (_matcherGameTurnCounter == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.GameTurnCounter);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherGameTurnCounter = matcher;
            }

            return _matcherGameTurnCounter;
        }
    }
}
