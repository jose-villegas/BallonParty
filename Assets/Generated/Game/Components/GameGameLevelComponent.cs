//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentContextApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameContext {

    public GameEntity gameLevelEntity { get { return GetGroup(GameMatcher.GameLevel).GetSingleEntity(); } }
    public GameLevelComponent gameLevel { get { return gameLevelEntity.gameLevel; } }
    public bool hasGameLevel { get { return gameLevelEntity != null; } }

    public GameEntity SetGameLevel(int newValue) {
        if (hasGameLevel) {
            throw new Entitas.EntitasException("Could not set GameLevel!\n" + this + " already has an entity with GameLevelComponent!",
                "You should check if the context already has a gameLevelEntity before setting it or use context.ReplaceGameLevel().");
        }
        var entity = CreateEntity();
        entity.AddGameLevel(newValue);
        return entity;
    }

    public void ReplaceGameLevel(int newValue) {
        var entity = gameLevelEntity;
        if (entity == null) {
            entity = SetGameLevel(newValue);
        } else {
            entity.ReplaceGameLevel(newValue);
        }
    }

    public void RemoveGameLevel() {
        gameLevelEntity.Destroy();
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public GameLevelComponent gameLevel { get { return (GameLevelComponent)GetComponent(GameComponentsLookup.GameLevel); } }
    public bool hasGameLevel { get { return HasComponent(GameComponentsLookup.GameLevel); } }

    public void AddGameLevel(int newValue) {
        var index = GameComponentsLookup.GameLevel;
        var component = (GameLevelComponent)CreateComponent(index, typeof(GameLevelComponent));
        component.Value = newValue;
        AddComponent(index, component);
    }

    public void ReplaceGameLevel(int newValue) {
        var index = GameComponentsLookup.GameLevel;
        var component = (GameLevelComponent)CreateComponent(index, typeof(GameLevelComponent));
        component.Value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemoveGameLevel() {
        RemoveComponent(GameComponentsLookup.GameLevel);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherGameLevel;

    public static Entitas.IMatcher<GameEntity> GameLevel {
        get {
            if (_matcherGameLevel == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.GameLevel);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherGameLevel = matcher;
            }

            return _matcherGameLevel;
        }
    }
}
